name: Rust Release Build

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Dependencies (if cross-compiling)
        run: |
          if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
            sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu
          fi

      - name: Build Release Binary
        run: cargo build --release --target=${{ matrix.target }}

      - name: Get Binary Name
        id: get_binary
        run: echo "BINARY_NAME=$(basename $(cargo metadata --format-version=1 --no-deps | jq -r '.packages[0].targets[0].name'))" >> $GITHUB_ENV

      - name: Rename Binary
        run: mv target/${{ matrix.target }}/release/${{ env.BINARY_NAME }} target/${{ matrix.target }}/release/${{ env.BINARY_NAME }}-${{ matrix.target }}

      - name: Upload Binary to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: target/${{ matrix.target }}/release/${{ env.BINARY_NAME }}-${{ matrix.target }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
